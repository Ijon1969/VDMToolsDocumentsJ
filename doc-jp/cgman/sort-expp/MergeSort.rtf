{\rtf1\adeflang1025\ansi\ansicpg1252\uc1\adeff0\deff0\stshfdbch0\stshfloch0\stshfhich0\stshfbi0\deflang1030\deflangfe1030{\fonttbl{\f0\froman\fcharset0\fprq2{\*\panose 02020603050405020304}Times New Roman{\*\falt Times New Roman};}{\f1\fswiss\fcharset0\fprq2{\*\panose 020b0604020202020204}Arial{\*\falt Arial};}
{\f2\fmodern\fcharset0\fprq1{\*\panose 02070309020205020404}Courier New;}{\f5\fmodern\fcharset0\fprq1{\*\panose 02070409020205020404}Courier{\*\falt Courier New};}{\f38\froman\fcharset238\fprq2 Times New Roman CE{\*\falt Times New Roman};}
{\f39\froman\fcharset204\fprq2 Times New Roman Cyr{\*\falt Times New Roman};}{\f41\froman\fcharset161\fprq2 Times New Roman Greek{\*\falt Times New Roman};}{\f42\froman\fcharset162\fprq2 Times New Roman Tur{\*\falt Times New Roman};}
{\f43\fbidi \froman\fcharset177\fprq2 Times New Roman (Hebrew){\*\falt Times New Roman};}{\f44\fbidi \froman\fcharset178\fprq2 Times New Roman (Arabic){\*\falt Times New Roman};}
{\f45\froman\fcharset186\fprq2 Times New Roman Baltic{\*\falt Times New Roman};}{\f46\froman\fcharset163\fprq2 Times New Roman (Vietnamese){\*\falt Times New Roman};}{\f48\fswiss\fcharset238\fprq2 Arial CE{\*\falt Arial};}
{\f49\fswiss\fcharset204\fprq2 Arial Cyr{\*\falt Arial};}{\f51\fswiss\fcharset161\fprq2 Arial Greek{\*\falt Arial};}{\f52\fswiss\fcharset162\fprq2 Arial Tur{\*\falt Arial};}{\f53\fbidi \fswiss\fcharset177\fprq2 Arial (Hebrew){\*\falt Arial};}
{\f54\fbidi \fswiss\fcharset178\fprq2 Arial (Arabic){\*\falt Arial};}{\f55\fswiss\fcharset186\fprq2 Arial Baltic{\*\falt Arial};}{\f56\fswiss\fcharset163\fprq2 Arial (Vietnamese){\*\falt Arial};}{\f58\fmodern\fcharset238\fprq1 Courier New CE;}
{\f59\fmodern\fcharset204\fprq1 Courier New Cyr;}{\f61\fmodern\fcharset161\fprq1 Courier New Greek;}{\f62\fmodern\fcharset162\fprq1 Courier New Tur;}{\f63\fbidi \fmodern\fcharset177\fprq1 Courier New (Hebrew);}
{\f64\fbidi \fmodern\fcharset178\fprq1 Courier New (Arabic);}{\f65\fmodern\fcharset186\fprq1 Courier New Baltic;}{\f66\fmodern\fcharset163\fprq1 Courier New (Vietnamese);}}{\colortbl;\red0\green0\blue0;\red0\green0\blue255;\red0\green255\blue255;
\red0\green255\blue0;\red255\green0\blue255;\red255\green0\blue0;\red255\green255\blue0;\red255\green255\blue255;\red0\green0\blue128;\red0\green128\blue128;\red0\green128\blue0;\red128\green0\blue128;\red128\green0\blue0;\red128\green128\blue0;
\red128\green128\blue128;\red192\green192\blue192;}{\stylesheet{\ql \li0\ri0\widctlpar\wrapdefault\faauto\adjustright\rin0\lin0\itap0 \rtlch\fcs1 \af0\afs20\alang1025 \ltrch\fcs0 \fs20\lang1033\langfe1030\cgrid\langnp1033\langfenp1030 \snext0 Normal;}{
\s1\ql \li0\ri0\sb240\sa60\keepn\widctlpar\wrapdefault\faauto\outlinelevel0\adjustright\rin0\lin0\itap0 \rtlch\fcs1 \ab\af1\afs28\alang1025 \ltrch\fcs0 \b\f1\fs28\lang1033\langfe1030\kerning28\cgrid\langnp1033\langfenp1030 \sbasedon0 \snext0 heading 1;}
{\*\cs10 \additive Default Paragraph Font;}{\*\ts11\tsrowd\trftsWidthB3\trpaddl108\trpaddr108\trpaddfl3\trpaddft3\trpaddfb3\trpaddfr3\tblind0\tblindtype3\tscellwidthfts0\tsvertalt\tsbrdrt\tsbrdrl\tsbrdrb\tsbrdrr\tsbrdrdgl\tsbrdrdgr\tsbrdrh\tsbrdrv 
\ql \li0\ri0\widctlpar\wrapdefault\aspalpha\aspnum\faauto\adjustright\rin0\lin0\itap0 \rtlch\fcs1 \af0\afs20 \ltrch\fcs0 \fs20\lang1024\langfe1024\cgrid\langnp1024\langfenp1024 \snext11 \ssemihidden Normal Table;}{
\s15\ql \li0\ri0\widctlpar\wrapdefault\faauto\adjustright\rin0\lin0\itap0 \shading1000 \rtlch\fcs1 \af2\afs20\alang1025 \ltrch\fcs0 \f2\fs20\lang1024\langfe1024\cgrid\noproof\langnp1033\langfenp1030 \snext15 VDM;}{\*\cs16 \additive \rtlch\fcs1 \af5 
\ltrch\fcs0 \f5 \sbasedon10 VDM_COV;}{\*\cs17 \additive \rtlch\fcs1 \af5 \ltrch\fcs0 \f5\cf6 \sbasedon10 VDM_NCOV;}{\s18\ql \li0\ri0\widctlpar\wrapdefault\faauto\adjustright\rin0\lin0\itap0 \shading1000 \rtlch\fcs1 \af2\afs20\alang1025 \ltrch\fcs0 
\f2\fs20\lang1024\langfe1024\cgrid\noproof\langnp1033\langfenp1030 \sbasedon15 \snext18 VDM_TC_TABLE;}{\s19\qj \li0\ri0\widctlpar\wrapdefault\faauto\adjustright\rin0\lin0\itap0 \rtlch\fcs1 \af2\afs20\alang1025 \ltrch\fcs0 
\f2\fs20\lang2057\langfe1030\cgrid\langnp2057\langfenp1030 \sbasedon0 \snext19 Plain Text;}}{\*\latentstyles\lsdstimax156\lsdlockeddef0}{\*\rsidtbl \rsid9775087\rsid10314603\rsid14098541}{\*\generator Microsoft Word 11.0.0000;}{\info
{\title The MergeSort Class}{\author peter}{\operator pglhome}{\creatim\yr1998\mo7\dy17\hr12\min26}{\revtim\yr2009\mo1\dy4\hr10\min43}{\version10}{\edmins4}{\nofpages2}{\nofwords271}{\nofchars1655}{\*\company SCSK}{\nofcharsws1923}
{\vern24613}{\*\password 00000000}}{\*\xmlnstbl {\xmlns1 http://schemas.microsoft.com/office/word/2003/wordml}}\paperw12240\paperh15840\margl1134\margr1134\margt1701\margb1701\gutter0\ltrsect 
\widowctrl\ftnbj\aenddoc\hyphhotz425\donotembedsysfont0\donotembedlingdata1\grfdocevents0\validatexml0\showplaceholdtext0\ignoremixedcontent0\saveinvalidxml0\showxmlerrors0\hyphcaps0\formshade\horzdoc\dghspace120\dgvspace120\dghorigin1701\dgvorigin1984
\dghshow0\dgvshow3\jcompress\viewkind4\viewscale100\pgbrdrhead\pgbrdrfoot\rsidroot9775087 \fet0{\*\wgrffmtfilter 013f}\ilfomacatclnup0{\*\template C:\\Programmer\\Microsoft Office\\Templates\\VDM.dot}\ltrpar \sectd \ltrsect
\linex0\headery709\footery709\colsx709\endnhere\sectdefaultcl\sftnbj {\*\pnseclvl1\pnucrm\pnstart1\pnindent720\pnhang {\pntxta .}}{\*\pnseclvl2\pnucltr\pnstart1\pnindent720\pnhang {\pntxta .}}{\*\pnseclvl3\pndec\pnstart1\pnindent720\pnhang {\pntxta .}}
{\*\pnseclvl4\pnlcltr\pnstart1\pnindent720\pnhang {\pntxta )}}{\*\pnseclvl5\pndec\pnstart1\pnindent720\pnhang {\pntxtb (}{\pntxta )}}{\*\pnseclvl6\pnlcltr\pnstart1\pnindent720\pnhang {\pntxtb (}{\pntxta )}}{\*\pnseclvl7\pnlcrm\pnstart1\pnindent720\pnhang 
{\pntxtb (}{\pntxta )}}{\*\pnseclvl8\pnlcltr\pnstart1\pnindent720\pnhang {\pntxtb (}{\pntxta )}}{\*\pnseclvl9\pnlcrm\pnstart1\pnindent720\pnhang {\pntxtb (}{\pntxta )}}\pard\plain \ltrpar
\s1\ql \li0\ri0\sb240\sa60\keepn\widctlpar\wrapdefault\faauto\outlinelevel0\adjustright\rin0\lin0\itap0 \rtlch\fcs1 \ab\af1\afs28\alang1025 \ltrch\fcs0 \b\f1\fs28\lang1033\langfe1030\kerning28\cgrid\langnp1033\langfenp1030 {\rtlch\fcs1 \af1 \ltrch\fcs0 
\insrsid10314603 MergeSort
\par }\pard\plain \ltrpar\s19\qj \li0\ri0\widctlpar\wrapdefault\faauto\adjustright\rin0\lin0\itap0 \rtlch\fcs1 \af2\afs20\alang1025 \ltrch\fcs0 \f2\fs20\lang2057\langfe1030\cgrid\langnp2057\langfenp1030 {\rtlch\fcs1 \af2 \ltrch\fcs0 \insrsid10314603 
\par }\pard\plain \ltrpar\ql \li0\ri0\widctlpar\wrapdefault\faauto\adjustright\rin0\lin0\itap0 \rtlch\fcs1 \af0\afs20\alang1025 \ltrch\fcs0 \fs20\lang1033\langfe1030\cgrid\langnp1033\langfenp1030 {\rtlch\fcs1 \af0 \ltrch\fcs0 \insrsid10314603 
The MergeSort class only provides the operation Sort and the functions MergeSorter and Merge to the outside world. It is a subclass of Sorter which is natural in the sense that it is one way of providing the sorting functionality.
\par 
\par }\pard\plain \ltrpar\s15\ql \li0\ri0\widctlpar\wrapdefault\faauto\adjustright\rin0\lin0\itap0 \shading1000 \rtlch\fcs1 \af2\afs20\alang1025 \ltrch\fcs0 \f2\fs20\lang1024\langfe1024\cgrid\noproof\langnp1033\langfenp1030 {\rtlch\fcs1 \af2 \ltrch\fcs0 
\insrsid10314603 class MergeSort is subclass of Sorter
\par 
\par operations
\par 
\par   public Sort: seq of int ==> seq of int
\par   Sort(l) ==
\par     return MergeSorter(l)
\par 
\par functions
\par 
\par }\pard\plain \ltrpar\ql \li0\ri0\widctlpar\wrapdefault\faauto\adjustright\rin0\lin0\itap0 \rtlch\fcs1 \af0\afs20\alang1025 \ltrch\fcs0 \fs20\lang1033\langfe1030\cgrid\langnp1033\langfenp1030 {\rtlch\fcs1 \af0 \ltrch\fcs0 \insrsid10314603 
\par The function MergeSorter is using the traditional algorith for splitting a sequence into two almost equally long sequences and then merging the results of sorting each of them. The split here is made using a let-be expression where l1 and l2 are introduce
d in a sequence concatenation pattern. A matching solution must satisfy the predicate which states that the difference of the lengths is less than 2.
\par 
\par }\pard\plain \ltrpar\s15\ql \li0\ri0\widctlpar\wrapdefault\faauto\adjustright\rin0\lin0\itap0 \shading1000 \rtlch\fcs1 \af2\afs20\alang1025 \ltrch\fcs0 \f2\fs20\lang1024\langfe1024\cgrid\noproof\langnp1033\langfenp1030 {\rtlch\fcs1 \af2 \ltrch\fcs0 
\insrsid10314603   MergeSorter: seq of real -> seq of real
\par   MergeSorter(l) ==
\par     cases l:
\par       []      -> l,
\par       [e]     -> l,
\par       others  -> let l1^l2 in set \{l\} be st abs (len l1 - len l2) < 2
\par                  in
\par                    let l_l = MergeSorter(l1),
\par                        l_r = MergeSorter(l2) in
\par                     Merge(l_l, l_r)
\par     }{\rtlch\fcs1 \af2 \ltrch\fcs0 \insrsid9775087 e}{\rtlch\fcs1 \af2 \ltrch\fcs0 \insrsid10314603 nd}{\rtlch\fcs1 \af2 \ltrch\fcs0 \insrsid9775087 
\par   measure Len}{\rtlch\fcs1 \af2 \ltrch\fcs0 \insrsid10314603 ;
\par 
\par }{\rtlch\fcs1 \af2 \ltrch\fcs0 \insrsid9775087   Len: seq of real -> nat
\par   Len(list) ==
\par     len list;
\par }\pard\plain \ltrpar\ql \li0\ri0\widctlpar\wrapdefault\faauto\adjustright\rin0\lin0\itap0 \rtlch\fcs1 \af0\afs20\alang1025 \ltrch\fcs0 \fs20\lang1033\langfe1030\cgrid\langnp1033\langfenp1030 {\rtlch\fcs1 \af0 \ltrch\fcs0 \insrsid10314603 
\par The Merge function is an auxiliary function which simply merges two sorted sequences into a new sorted sequence.
\par 
\par }\pard\plain \ltrpar\s15\ql \li0\ri0\widctlpar\wrapdefault\faauto\adjustright\rin0\lin0\itap0 \shading1000 \rtlch\fcs1 \af2\afs20\alang1025 \ltrch\fcs0 \f2\fs20\lang1024\langfe1024\cgrid\noproof\langnp1033\langfenp1030 {\rtlch\fcs1 \af2 \ltrch\fcs0 
\insrsid10314603   Merge: seq of int * seq of int -> seq of int
\par   Merge(l1,l2) ==
\par     cases mk_(l1,l2):
\par       mk_([],l),mk_(l,[]) -> l,
\par       others              -> if hd l1 <= hd l2 then 
\par                                [hd l1] ^ Merge(tl l1, l2)
\par                              }{\rtlch\fcs1 \af2 \ltrch\fcs0 \lang1024\langfe1024\langnp1030\insrsid10314603\charrsid9775087 else
\par                                [hd l2] ^ Merge(l1, tl l2)
\par     end
\par   }{\rtlch\fcs1 \af2 \ltrch\fcs0 \insrsid10314603 pre forall i in set inds l1 & l1(i) >= 0 and
\par       }{\rtlch\fcs1 \af2 \ltrch\fcs0 \lang1024\langfe1024\langnp2057\insrsid10314603\charrsid14098541 forall i in set inds l2 & l2(i) >= 0
\par }{\rtlch\fcs1 \af2 \ltrch\fcs0 \lang1024\langfe1024\langnp2057\insrsid14098541\charrsid14098541   measure Len}{\rtlch\fcs1 \af2 \ltrch\fcs0 \lang1024\langfe1024\langnp2057\insrsid10314603 ;}{\rtlch\fcs1 \af2 \ltrch\fcs0 
\lang1024\langfe1024\langnp2057\insrsid14098541\charrsid14098541 
\par }{\rtlch\fcs1 \af2 \ltrch\fcs0 \lang1024\langfe1024\langnp2057\insrsid10314603 
\par }\pard \ltrpar\s15\ql \li0\ri0\widctlpar\wrapdefault\faauto\adjustright\rin0\lin0\itap0\pararsid10314603 \shading1000 {\rtlch\fcs1 \af2 \ltrch\fcs0 \insrsid10314603   Len: seq of int * seq of int -> nat
\par   Len(list1,list2) ==
\par     len list1 + len list2;
\par }\pard \ltrpar\s15\ql \li0\ri0\widctlpar\wrapdefault\faauto\adjustright\rin0\lin0\itap0 \shading1000 {\rtlch\fcs1 \af2 \ltrch\fcs0 \lang1024\langfe1024\langnp2057\insrsid10314603\charrsid14098541 
\par }{\rtlch\fcs1 \af2 \ltrch\fcs0 \lang1024\langfe1024\langnp1030\insrsid10314603\charrsid9775087 end MergeSort
\par }\pard\plain \ltrpar\ql \li0\ri0\widctlpar\wrapdefault\faauto\adjustright\rin0\lin0\itap0 \rtlch\fcs1 \af0\afs20\alang1025 \ltrch\fcs0 \fs20\lang1033\langfe1030\cgrid\langnp1033\langfenp1030 {\rtlch\fcs1 \af0 \ltrch\fcs0 
\lang1030\langfe1030\langnp1030\insrsid10314603\charrsid9775087 
\par }{\rtlch\fcs1 \af0 \ltrch\fcs0 \insrsid10314603 test coverage of the MergeSort class can gathered as:
\par 
\par }\pard\plain \ltrpar\s18\ql \li0\ri0\widctlpar\wrapdefault\faauto\adjustright\rin0\lin0\itap0 \shading1000 \rtlch\fcs1 \af2\afs20\alang1025 \ltrch\fcs0 \f2\fs20\lang1024\langfe1024\cgrid\noproof\langnp1033\langfenp1030 {\rtlch\fcs1 \af2 \ltrch\fcs0 
\insrsid10314603 MergeSort
\par }}
